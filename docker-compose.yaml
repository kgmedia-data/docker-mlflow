

version: '3.3'

services:
    db:
        restart: always
        image: postgres:latest
        container_name: mlflow_db
        expose:
            - ${DB_PORT}
        networks:
            - backend
        environment:
            - MUID=$UID
            - MGID=$GID
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PW}
        volumes:
            - db_datapg:/var/lib/postgresql/data

    app:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        expose:
            - 5001
        networks:
            - frontend
            - backend
        environment:
            - BACKEND=postgresql://${DB_USER}:${DB_PW}@db:${DB_PORT}/${DB_NAME}
            # For artifact store in AWS S3 (note boto was installed in container):
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
            - ARTIFACTS=${ARTIFACTS} # s3://bucket-name/folder
        volumes:
            - mlrun_data:/mlruns
            - condenv:/opt/conda
        command: 
            - sh    # (sh allows for var substitution of BACKEND and ARTIFACTS)
            - -c
            - mlflow server --port 5001 --host 0.0.0.0 --backend-store-uri $${BACKEND} --default-artifact-root $${ARTIFACTS}
        depends_on:
            - db

    nginx:
        restart: always
        build: ./nginx
        image: mlflow_nginx
        container_name: mlflow_nginx
        ports:
            - "5001:80"
        networks:
            - frontend
        environment:
            - BASIC_AUTH_USERNAME=${AUTH_USER}
            - BASIC_AUTH_PASSWORD=${AUTH_PASS}
        entrypoint: sh /run.sh
        depends_on:
            - app

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    db_datapg:
    mlrun_data:
    condenv:
